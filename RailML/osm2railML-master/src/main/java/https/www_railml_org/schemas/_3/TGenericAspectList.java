//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.08.08 at 02:41:02 PM ICT 
//


package https.www_railml_org.schemas._3;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for tGenericAspectList.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="tGenericAspectList"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="warning"/&gt;
 *     &lt;enumeration value="supplementary"/&gt;
 *     &lt;enumeration value="restriction"/&gt;
 *     &lt;enumeration value="proceed"/&gt;
 *     &lt;enumeration value="limitedProceed"/&gt;
 *     &lt;enumeration value="informative"/&gt;
 *     &lt;enumeration value="combinedProceed"/&gt;
 *     &lt;enumeration value="closed"/&gt;
 *     &lt;enumeration value="caution"/&gt;
 *     &lt;enumeration value="callOn"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "tGenericAspectList")
@XmlEnum
public enum TGenericAspectList {

    @XmlEnumValue("warning")
    WARNING("warning"),
    @XmlEnumValue("supplementary")
    SUPPLEMENTARY("supplementary"),
    @XmlEnumValue("restriction")
    RESTRICTION("restriction"),
    @XmlEnumValue("proceed")
    PROCEED("proceed"),
    @XmlEnumValue("limitedProceed")
    LIMITED_PROCEED("limitedProceed"),
    @XmlEnumValue("informative")
    INFORMATIVE("informative"),
    @XmlEnumValue("combinedProceed")
    COMBINED_PROCEED("combinedProceed"),
    @XmlEnumValue("closed")
    CLOSED("closed"),
    @XmlEnumValue("caution")
    CAUTION("caution"),
    @XmlEnumValue("callOn")
    CALL_ON("callOn");
    private final String value;

    TGenericAspectList(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TGenericAspectList fromValue(String v) {
        for (TGenericAspectList c: TGenericAspectList.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
