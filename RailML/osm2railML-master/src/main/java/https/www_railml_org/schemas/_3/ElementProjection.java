//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.08.08 at 02:41:02 PM ICT 
//


package https.www_railml_org.schemas._3;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ElementProjection complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ElementProjection"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{https://www.railml.org/schemas/3.1}VisualizationBaseElement"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="usesSymbol" type="{https://www.railml.org/schemas/3.1}ElementProjectionSymbol" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="refersToElement" use="required" type="{https://www.railml.org/schemas/3.1}tRef" /&gt;
 *       &lt;anyAttribute namespace='##other'/&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ElementProjection", propOrder = {
    "usesSymbol"
})
@XmlSeeAlso({
    SpotProjection.class,
    LinearProjection.class,
    AreaProjection.class
})
public class ElementProjection
    extends VisualizationBaseElement
{

    protected ElementProjectionSymbol usesSymbol;
    @XmlAttribute(name = "refersToElement", required = true)
    protected String refersToElement;

    /**
     * Gets the value of the usesSymbol property.
     * 
     * @return
     *     possible object is
     *     {@link ElementProjectionSymbol }
     *     
     */
    public ElementProjectionSymbol getUsesSymbol() {
        return usesSymbol;
    }

    /**
     * Sets the value of the usesSymbol property.
     * 
     * @param value
     *     allowed object is
     *     {@link ElementProjectionSymbol }
     *     
     */
    public void setUsesSymbol(ElementProjectionSymbol value) {
        this.usesSymbol = value;
    }

    /**
     * Gets the value of the refersToElement property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRefersToElement() {
        return refersToElement;
    }

    /**
     * Sets the value of the refersToElement property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRefersToElement(String value) {
        this.refersToElement = value;
    }

}
